Child: Group(Group { id: "", transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, abs_transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, opacity: NormalizedF32(FiniteF32(1.0)), blend_mode: Normal, isolate: false, clip_path: None, mask: None, filters: [] })
Child: Group(Group { id: "bunny idk", transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, abs_transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, opacity: NormalizedF32(FiniteF32(1.0)), blend_mode: Normal, isolate: false, clip_path: None, mask: None, filters: [] })
Child: Group(Group { id: "", transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, abs_transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, opacity: NormalizedF32(FiniteF32(1.0)), blend_mode: Normal, isolate: false, clip_path: Some(ClipPath { id: "clip0_1_2", units: UserSpaceOnUse, transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, clip_path: None, root: Group(Group { id: "", transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, abs_transform: Transform { sx: 1.0, kx: 0.0, ky: 0.0, sy: 1.0, tx: 0.0, ty: 0.0 }, opacity: NormalizedF32(FiniteF32(1.0)), blend_mode: Normal, isolate: false, clip_path: None, mask: None, filters: [] }) }), mask: None, filters: [] })
Child: Path(Path { id: "Drawing", visibility: Visible, fill: None, stroke: Some(Stroke { paint: Color(Color { red: 0, green: 0, blue: 0 }), dasharray: None, dashoffset: 0.0, miterlimit: StrokeMiterlimit(4.0), opacity: NormalizedF32(FiniteF32(1.0)), width: NonZeroPositiveF32(FiniteF32(1.0)), linecap: Butt, linejoin: Miter }), paint_order: FillAndStroke, rendering_mode: GeometricPrecision, data: Path { segments: "M 82.4674 75.6489 C 67.924 104.644 47.5633 162.635 82.4674 162.635 C 117.371 162.635 135.061 137.39 139.543 124.767 C 156.739 85.9848 174.338 25.2136 107.164 92.3875 C 39.9897 159.561 127.104 167.208 179.057 162.635 L 179.057 53.9711 L 240.661 115.575 L 139.543 216.692 L 139.543 41.8973 C 195.704 29.1833 308.027 10.2861 308.027 36.4093 C 308.027 62.5325 263.116 124.859 240.661 152.756 C 281.41 156.872 356.706 167.409 331.9 176.629 C 307.094 185.849 235.218 188.337 202.382 188.429 L 334.095 86.8995", bounds: Rect { left: 39.9897, top: 10.2861, right: 356.706, bottom: 216.692 } } })
Found path! Id: Drawing
Found path!
Child: Path(Path { id: "Decoration", visibility: Visible, fill: Some(Fill { paint: Color(Color { red: 0, green: 0, blue: 0 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, rendering_mode: GeometricPrecision, data: Path { segments: "M 0 240 L 400 240 L 400 450 L 0 450 Z", bounds: Rect { left: 0.0, top: 240.0, right: 400.0, bottom: 450.0 } } })
Found path! Id: Decoration
Child: Text(Text { id: "Data", rendering_mode: OptimizeLegibility, dx: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], dy: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], rotate: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], writing_mode: LeftToRight, chunks: [TextChunk { x: Some(5.0), y: Some(259.434), anchor: Start, spans: [TextSpan { start: 0, end: 4, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "#1: " }, TextChunk { x: Some(5.0), y: Some(282.434), anchor: Start, spans: [TextSpan { start: 0, end: 17, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "Difficulty: Hard " }, TextChunk { x: Some(5.0), y: Some(305.434), anchor: Start, spans: [TextSpan { start: 0, end: 15, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "Other: Property" }], bounding_box: None, flattened: None })
Found text! Id: Data
Chunk: TextChunk { x: Some(5.0), y: Some(259.434), anchor: Start, spans: [TextSpan { start: 0, end: 4, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "#1: " }
Unknown property: #1
Chunk: TextChunk { x: Some(5.0), y: Some(282.434), anchor: Start, spans: [TextSpan { start: 0, end: 17, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "Difficulty: Hard " }
Chunk: TextChunk { x: Some(5.0), y: Some(305.434), anchor: Start, spans: [TextSpan { start: 0, end: 15, fill: Some(Fill { paint: Color(Color { red: 255, green: 255, blue: 255 }), opacity: NormalizedF32(FiniteF32(1.0)), rule: NonZero }), stroke: None, paint_order: FillAndStroke, font: Font { families: ["Arial"], style: Normal, stretch: Normal, weight: 700 }, font_size: NonZeroPositiveF32(FiniteF32(20.0)), small_caps: false, apply_kerning: true, decoration: TextDecoration { underline: None, overline: None, line_through: None }, dominant_baseline: Auto, alignment_baseline: Auto, baseline_shift: [], visibility: Visible, letter_spacing: 0.0, word_spacing: 0.0, text_length: None, length_adjust: Spacing }], text_flow: Linear, text: "Other: Property" }
Unknown property: Other
Data: {"difficulty": "Hard"}
MoveTo(Point { x: 82.4674, y: 75.6489 })
CubicTo(Point { x: 67.924, y: 104.644 }, Point { x: 47.5633, y: 162.635 }, Point { x: 82.4674, y: 162.635 })
CubicTo(Point { x: 117.371, y: 162.635 }, Point { x: 135.061, y: 137.39 }, Point { x: 139.543, y: 124.767 })
CubicTo(Point { x: 156.739, y: 85.9848 }, Point { x: 174.338, y: 25.2136 }, Point { x: 107.164, y: 92.3875 })
CubicTo(Point { x: 39.9897, y: 159.561 }, Point { x: 127.104, y: 167.208 }, Point { x: 179.057, y: 162.635 })
LineTo(Point { x: 179.057, y: 53.9711 })
LineTo(Point { x: 240.661, y: 115.575 })
LineTo(Point { x: 139.543, y: 216.692 })
LineTo(Point { x: 139.543, y: 41.8973 })
CubicTo(Point { x: 195.704, y: 29.1833 }, Point { x: 308.027, y: 10.2861 }, Point { x: 308.027, y: 36.4093 })
CubicTo(Point { x: 308.027, y: 62.5325 }, Point { x: 263.116, y: 124.859 }, Point { x: 240.661, y: 152.756 })
CubicTo(Point { x: 281.41, y: 156.872 }, Point { x: 356.706, y: 167.409 }, Point { x: 331.9, y: 176.629 })
CubicTo(Point { x: 307.094, y: 185.849 }, Point { x: 235.218, y: 188.337 }, Point { x: 202.382, y: 188.429 })
LineTo(Point { x: 334.095, y: 86.8995 })
Path: [FullUPoint { x: 82, y: 76, segment: 0 }, FullUPoint { x: 82, y: 76, segment: 0 }, FullUPoint { x: 78, y: 85, segment: 1 }, FullUPoint { x: 73, y: 96, segment: 2 }, FullUPoint { x: 69, y: 108, segment: 3 }, FullUPoint { x: 66, y: 119, segment: 4 }, FullUPoint { x: 64, y: 130, segment: 5 }, FullUPoint { x: 63, y: 141, segment: 6 }, FullUPoint { x: 64, y: 150, segment: 7 }, FullUPoint { x: 68, y: 157, segment: 8 }, FullUPoint { x: 73, y: 161, segment: 9 }, FullUPoint { x: 82, y: 163, segment: 0 }, FullUPoint { x: 92, y: 162, segment: 1 }, FullUPoint { x: 101, y: 160, segment: 2 }, FullUPoint { x: 109, y: 157, segment: 3 }, FullUPoint { x: 116, y: 153, segment: 4 }, FullUPoint { x: 122, y: 149, segment: 5 }, FullUPoint { x: 128, y: 144, segment: 6 }, FullUPoint { x: 132, y: 139, segment: 7 }, FullUPoint { x: 135, y: 134, segment: 8 }, FullUPoint { x: 138, y: 129, segment: 9 }, FullUPoint { x: 140, y: 125, segment: 0 }, FullUPoint { x: 145, y: 113, segment: 1 }, FullUPoint { x: 150, y: 100, segment: 2 }, FullUPoint { x: 153, y: 88, segment: 3 }, FullUPoint { x: 155, y: 77, segment: 4 }, FullUPoint { x: 155, y: 69, segment: 5 }, FullUPoint { x: 152, y: 63, segment: 6 }, FullUPoint { x: 147, y: 62, segment: 7 }, FullUPoint { x: 138, y: 66, segment: 8 }, FullUPoint { x: 125, y: 76, segment: 9 }, FullUPoint { x: 107, y: 92, segment: 0 }, FullUPoint { x: 91, y: 111, segment: 1 }, FullUPoint { x: 84, y: 126, segment: 2 }, FullUPoint { x: 83, y: 138, segment: 3 }, FullUPoint { x: 88, y: 148, segment: 4 }, FullUPoint { x: 98, y: 155, segment: 5 }, FullUPoint { x: 112, y: 159, segment: 6 }, FullUPoint { x: 128, y: 162, segment: 7 }, FullUPoint { x: 145, y: 164, segment: 8 }, FullUPoint { x: 163, y: 164, segment: 9 }, FullUPoint { x: 179, y: 54, segment: 5 }, FullUPoint { x: 241, y: 116, segment: 6 }, FullUPoint { x: 140, y: 217, segment: 7 }, FullUPoint { x: 140, y: 42, segment: 8 }, FullUPoint { x: 140, y: 42, segment: 0 }, FullUPoint { x: 158, y: 38, segment: 1 }, FullUPoint { x: 179, y: 34, segment: 2 }, FullUPoint { x: 201, y: 30, segment: 3 }, FullUPoint { x: 223, y: 27, segment: 4 }, FullUPoint { x: 245, y: 24, segment: 5 }, FullUPoint { x: 265, y: 23, segment: 6 }, FullUPoint { x: 282, y: 23, segment: 7 }, FullUPoint { x: 296, y: 25, segment: 8 }, FullUPoint { x: 305, y: 29, segment: 9 }, FullUPoint { x: 308, y: 36, segment: 0 }, FullUPoint { x: 307, y: 45, segment: 1 }, FullUPoint { x: 303, y: 56, segment: 2 }, FullUPoint { x: 298, y: 68, segment: 3 }, FullUPoint { x: 291, y: 81, segment: 4 }, FullUPoint { x: 283, y: 94, segment: 5 }, FullUPoint { x: 274, y: 107, segment: 6 }, FullUPoint { x: 265, y: 120, segment: 7 }, FullUPoint { x: 256, y: 133, segment: 8 }, FullUPoint { x: 248, y: 144, segment: 9 }, FullUPoint { x: 241, y: 153, segment: 0 }, FullUPoint { x: 254, y: 154, segment: 1 }, FullUPoint { x: 268, y: 156, segment: 2 }, FullUPoint { x: 283, y: 158, segment: 3 }, FullUPoint { x: 298, y: 160, segment: 4 }, FullUPoint { x: 311, y: 163, segment: 5 }, FullUPoint { x: 322, y: 165, segment: 6 }, FullUPoint { x: 331, y: 168, segment: 7 }, FullUPoint { x: 336, y: 171, segment: 8 }, FullUPoint { x: 337, y: 174, segment: 9 }, FullUPoint { x: 332, y: 177, segment: 0 }, FullUPoint { x: 323, y: 179, segment: 1 }, FullUPoint { x: 312, y: 182, segment: 2 }, FullUPoint { x: 299, y: 183, segment: 3 }, FullUPoint { x: 285, y: 185, segment: 4 }, FullUPoint { x: 270, y: 186, segment: 5 }, FullUPoint { x: 255, y: 187, segment: 6 }, FullUPoint { x: 240, y: 187, segment: 7 }, FullUPoint { x: 226, y: 188, segment: 8 }, FullUPoint { x: 213, y: 188, segment: 9 }, FullUPoint { x: 334, y: 87, segment: 13 }]
Writing to "data/out/Bunny.json"
